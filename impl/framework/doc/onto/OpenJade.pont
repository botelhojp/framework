; Wed Oct 05 22:39:16 BRT 2016
; 
;+ (version "3.2.1")
;+ (build "Build 365")


(defclass %3ACLIPS_TOP_LEVEL_SLOT_CLASS "Fake class to save top-level slot information"
	(is-a USER)
	(role abstract)
	(single-slot size
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot index
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot signMode
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot value
;+		(comment "valor da iteração")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot attributes
		(type SYMBOL)
;+		(allowed-parents RatingAttribute)
		(create-accessor read-write))
	(multislot listContent
		(type SYMBOL)
;+		(allowed-parents)
		(create-accessor read-write))
	(single-slot message
		(type INSTANCE)
;+		(allowed-classes EncryptedMessage)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot pkcs7
		(type INSTANCE)
;+		(allowed-classes PKCS7Message)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot algorithm
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot client
		(type INSTANCE)
;+		(allowed-classes AID)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot content
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot term
		(type STRING)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot provider
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot keyAlgorithm
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot certificate
		(type INSTANCE)
;+		(allowed-classes)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot dossier
		(type INSTANCE)
;+		(allowed-classes Dossier)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot rating
		(type INSTANCE)
;+		(allowed-classes Rating)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot feedback
		(type SYMBOL)
;+		(allowed-parents)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot hash
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot node
		(type INSTANCE)
;+		(allowed-classes Node)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot nodeR
		(type INSTANCE)
;+		(allowed-classes Node)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot nodeL
		(type INSTANCE)
;+		(allowed-classes Node)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot tree
		(type INSTANCE)
;+		(allowed-classes MerkleTree)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot server
		(type INSTANCE)
;+		(allowed-classes AID)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ratings
		(type INSTANCE)
;+		(allowed-classes Rating)
		(create-accessor read-write))
	(multislot witnesses
		(type INSTANCE)
;+		(allowed-classes AID)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write))
	(single-slot round
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot aid
		(type INSTANCE)
;+		(allowed-classes AID)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot key
		(type SYMBOL)
;+		(allowed-parents)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot signature
		(type SYMBOL)
;+		(allowed-parents PKCS7Message)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass RatingAction
	(is-a AgentAction)
	(role concrete))

(defclass RequestRating
	(is-a RatingAction)
	(role concrete)
	(single-slot aid
		(type INSTANCE)
;+		(allowed-classes AID)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SendRating
	(is-a RatingAction)
	(role concrete)
	(multislot ratings
		(type INSTANCE)
;+		(allowed-classes Rating)
		(create-accessor read-write)))

(defclass TimerAction
	(is-a AgentAction)
	(role concrete))

(defclass ChangeIteration
	(is-a TimerAction)
	(role concrete)
	(single-slot round
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass MessageAction
	(is-a AgentAction)
	(role concrete))

(defclass Sign
	(is-a MessageAction)
	(role concrete)
	(single-slot pkcs7
		(type INSTANCE)
;+		(allowed-classes PKCS7Message)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass SendDossier
	(is-a MessageAction)
	(role concrete)
	(single-slot dossier
		(type INSTANCE)
;+		(allowed-classes Dossier)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot signature
		(type SYMBOL)
;+		(allowed-parents PKCS7Message)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass SendFeedback
	(is-a MessageAction)
	(role concrete)
	(multislot feedback
		(type SYMBOL)
;+		(allowed-parents)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write)))

(defclass Encipher
	(is-a MessageAction)
	(role concrete)
	(single-slot algorithm
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot provider
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot signMode
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot message
		(type INSTANCE)
;+		(allowed-classes EncryptedMessage)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass WitnessAction
	(is-a AgentAction)
	(role concrete))

(defclass WitnessRequest
	(is-a WitnessAction)
	(role concrete)
	(single-slot aid
		(type INSTANCE)
;+		(allowed-classes AID)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass WitnessResponse
	(is-a WitnessAction)
	(role concrete)
	(single-slot server
		(type INSTANCE)
;+		(allowed-classes AID)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot witnesses
		(type INSTANCE)
;+		(allowed-classes AID)
		(cardinality 1 ?VARIABLE)
		(create-accessor read-write)))

(defclass ACLMessage
	(is-a Concept)
	(role abstract))

(defclass PKCS7Message
	(is-a ACLMessage)
	(role concrete)
	(single-slot content
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass EncryptedMessage
	(is-a ACLMessage)
	(role concrete)
	(single-slot keyAlgorithm
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot key
		(type SYMBOL)
;+		(allowed-parents)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot listContent
		(type SYMBOL)
;+		(allowed-parents)
		(create-accessor read-write)))

(defclass Rating
	(is-a ACLMessage)
	(role concrete)
	(single-slot client
		(type INSTANCE)
;+		(allowed-classes AID)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot server
		(type INSTANCE)
;+		(allowed-classes AID)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot round
		(type INTEGER)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot index
		(type INTEGER)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot value
;+		(comment "valor da iteração")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(multislot attributes
		(type SYMBOL)
;+		(allowed-parents RatingAttribute)
		(create-accessor read-write)))

(defclass RatingAttribute
	(is-a Concept)
	(role concrete)
	(single-slot value
;+		(comment "valor da iteração")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write))
	(single-slot name_
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))

(defclass Dossier
	(is-a Concept)
	(role concrete)
	(single-slot tree
		(type INSTANCE)
;+		(allowed-classes MerkleTree)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(multislot ratings
		(type INSTANCE)
;+		(allowed-classes Rating)
		(create-accessor read-write)))

(defclass MerkleTree
	(is-a Concept)
	(role concrete)
	(single-slot node
		(type INSTANCE)
;+		(allowed-classes Node)
;+		(cardinality 0 1)
		(create-accessor read-write)))

(defclass Node
	(is-a Concept)
	(role concrete)
	(single-slot nodeR
		(type INSTANCE)
;+		(allowed-classes Node)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot nodeL
		(type INSTANCE)
;+		(allowed-classes Node)
;+		(cardinality 0 1)
		(create-accessor read-write))
	(single-slot value
;+		(comment "valor da iteração")
		(type STRING)
;+		(cardinality 1 1)
		(create-accessor read-write)))